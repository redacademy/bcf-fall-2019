enum Difficulty {
  EASY
  MODERATE
  DIFFICULT
}

type Host {
  id: ID! @id
  email: String! @unique
  name: String!
  image: String!
  bio: String!
}

type User {
  id: ID! @id
  email: String! @unique
  password: String!
  firstName: String!
  lastName: String!
  location: String!
  image: String
  date: DateTime! @createdAt
}

type Review {
  id: ID! @id
  user: User! 
  score: Int!
  comment: String!
  date: DateTime! @createdAt
}

type Event {
  id: ID! @id
  title: String!
  date: DateTime! 
  startAt: String!
  endAt: String!
  category: String!
  price: Float!
  locationTitle: String!
  address: String!
  image: String!
  difficulty: Difficulty!
  language: String!
  details: String!
  host: Host! @relation(link: TABLE)
  reviews: [Review]  @relation(link: TABLE, onDelete: CASCADE)
}

type Audio {
  id: ID! @id
  url: String!
  markers: [AudioMarkers]! 
  selfGuidedTour: SelfGuidedTour!
}

type AudioMarkers {
  id: ID! @id
  title: String!
  description: String!
  latitude: String!
  longitude: String!
  start: Float!
  audio: Audio! @relation(link: TABLE, onDelete: CASCADE)
}

type SelfGuidedTour{
  id: ID! @id
  title: String!
  location: String!
  duration: String!
  difficulty: Difficulty!
  petFriendly: Boolean! @default(value: false)
  description: String!
  audio: Audio!  @relation(link: TABLE, onDelete: CASCADE)
}


type Faq {
  id: ID! @id
  question: String!
  answer: String!
}

type ContactInfo{
  id: ID! @id
  address: String!
  phoneNumber: String!
  email: String!
}

type ContactUs{
  id: ID! @id
  contactInfo: ContactInfo! @relation(link: TABLE)
  twitterLink: String
  instagramLink: String
  facebookLink: String
}

type Info{
  id: ID! @id
  faq: [Faq] @relation(link: TABLE)
  about: String!
  contactUs: ContactUs! @relation(link: TABLE)
}
